library(GGally); library(lemon); library(ggrepel)
library(scales);
library(latex2exp); library(scales)
library(qqplotr)
library(astsa); library(forecast)
library(reshape2)
library(magrittr)
library(grid)
library(lutz)
th <- theme_bw(base_size=10) +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=8), axis.title=element_text(size=9)) +
theme(strip.background=element_blank()) +
theme(strip.text=element_text(face="bold")) +
theme(plot.margin=margin(10,5,5,5)) +
theme(plot.title=element_text(size=10, face='bold', hjust=0.5)) +
theme(legend.title=element_text(size=7), legend.text=element_text(size=6), legend.margin=margin(0,0,0,0)) +
theme(axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm")),
axis.title.y = element_text(margin = unit(c(0, 3, 0, 0), "mm")))
##### Read in full SXF data set #####
sxf_full <- read_csv("../data/sxf_full.csv")
##### Extract datetime and DNI columns and save as .rdata #####
sxf_dni <- sxf_full %>%
filter(dni != 0, solar_zenith_angle <= 89.5) %>%
select(time_index, dni)
dni_06_2019_1 <- filter(sxf_dni, year(time_index)==2019 & month(time_index)==6 & day(time_index) <= 7)
dni_06_2019_2 <- filter(sxf_dni, year(time_index)==2019 & month(time_index)==6 & day(time_index) <= 7 & day(time_index) >= 3)
dni_06_2019_3<- filter(sxf_dni, year(time_index)==2019 & month(time_index)==6 & day(time_index) <= 7 & day(time_index) >= 5)
g1 <- ggplot(dni_06_2019_1, aes(x=time_index, y=dni)) +
geom_line() +
th + labs(x='', y='DNI', title='DNI Time Series for June 1st-7th, 2019') +
scale_x_datetime(date_break="1 day", date_labels="%b %d")
g2 <- ggplot(dni_06_2019_2, aes(x=time_index, y=dni)) +
geom_line() +
th + labs(x='', y='DNI', title='DNI Time Series for June 3rd-7th, 2019') +
scale_x_datetime(date_break="1 day", date_labels="%b %d")
g3 <- ggplot(dni_06_2019_3, aes(x=time_index, y=dni)) +
geom_line() +
th + labs(x='Time', y='DNI', title='DNI Time Series for June 5th-7th, 2019') +
scale_x_datetime(date_break="1 day", date_labels="%b %d")
g <- arrangeGrob(g1, g2, g3)
ggsave('../plots/ts.png', g, bg='transparent')
n <- length(dni_06_2019_1$dni)
dft <- 2*fft(dni_06_2019_1$dni)
P_dni <- Mod(dft)^2/n
P_df_1 <- subset(data.frame(x=0:(n-1)/n, y=P_dni), x>0)
n <- length(dni_06_2019_2$dni)
dft <- 2*fft(dni_06_2019_2$dni)
P_dni <- Mod(dft)^2/n
P_df_2 <- subset(data.frame(x=0:(n-1)/n, y=P_dni), x>0)
n <- length(dni_06_2019_3$dni)
dft <- 2*fft(dni_06_2019_3$dni)
P_dni <- Mod(dft)^2/n
P_df_3 <- subset(data.frame(x=0:(n-1)/n, y=P_dni), x>0)
ix_1 <- which.max(P_df_1$y)
ix_2 <- which.max(P_df_2$y)
ix_3 <- which.max(P_df_3$y)
g1 <- ggplot(P_df_1, aes(x=x, y=y)) +
geom_point(shape=1, size=0.75) +
geom_point(data=slice(P_df_1, ix_1), aes(x=x, y=y), color='red', size=0.75) +
annotate('text', x=P_df_1$x[ix_1]+0.07, y=P_df_1$y[ix_1]-100000, label=TeX(sprintf('$\\omega = %.4f$', P_df_1$x[ix_1])), size=3) +
geom_line(size=0.25) +
th + labs(x='', y='Periodogram', title='Scaled Periodogram for June 1st-7th, 2019')
g2 <- ggplot(P_df_2, aes(x=x, y=y)) +
geom_point(shape=1, size=0.75) +
geom_point(data=slice(P_df_2, ix_2), aes(x=x, y=y), color='red', size=0.75) +
annotate('text', x=P_df_2$x[ix_2]+0.07, y=P_df_2$y[ix_2]-100000, label=TeX(sprintf('$\\omega = %.4f$', P_df_1$x[ix_2])), size=3) +
geom_line(size=0.25) +
th + labs(x='', y='Periodogram', title='Scaled Periodogram for June 3rd-7th, 2019')
g3 <- ggplot(P_df_3, aes(x=x, y=y)) +
geom_point(shape=1, size=0.75) +
geom_point(data=slice(P_df_3, ix_3), aes(x=x, y=y), color='red', size=0.75) +
annotate('text', x=P_df_3$x[ix_3]+0.07, y=P_df_3$y[ix_3]-100000, label=TeX(sprintf('$\\omega = %.4f$', P_df_3$x[ix_3])), size=3) +
geom_line(size=0.25) +
th + labs(x='Frequency', y='Periodogram', title='Scaled Periodogram for June 5th-7th, 2019')
floor(1/P_df_1$x[which.max(P_df_1$y)])
floor(1/P_df_2$x[which.max(P_df_2$y)])
floor(1/P_df_3$x[which.max(P_df_3$y)])
g <- arrangeGrob(g1, g2, g3)
ggsave('../plots/pgrams.png', g, bg='transparent')
rm(list=ls())
library(tidyverse); library(gridExtra); library(gridExtra); library(ggfortify);
library(lubridate)
library(GGally); library(lemon); library(ggrepel)
library(scales);
library(latex2exp); library(scales)
library(qqplotr)
library(astsa); library(forecast)
library(reshape2)
library(magrittr)
library(grid)
library(lutz)
th <- theme_bw(base_size=10) +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=8), axis.title=element_text(size=9)) +
theme(strip.background=element_blank()) +
theme(strip.text=element_text(face="bold")) +
theme(plot.margin=margin(10,5,5,5)) +
theme(plot.title=element_text(size=10, face='bold', hjust=0.5)) +
theme(legend.title=element_text(size=7), legend.text=element_text(size=6), legend.margin=margin(0,0,0,0)) +
theme(axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm")),
axis.title.y = element_text(margin = unit(c(0, 3, 0, 0), "mm")))
##### Read in full SXF data set #####
sxf_full <- read_csv("../data/sxf_full.csv")
##### Extract datetime and DNI columns and save as .rdata #####
sxf_dni <- sxf_full %>%
filter(dni != 0, solar_zenith_angle <= 89.5) %>%
select(time_index, dni)
dni_06_2019_1 <- filter(sxf_dni, year(time_index)==2019 & month(time_index)==6 & day(time_index) <= 7)
dni_06_2019_2 <- filter(sxf_dni, year(time_index)==2019 & month(time_index)==6 & day(time_index) <= 7 & day(time_index) >= 3)
dni_06_2019_3<- filter(sxf_dni, year(time_index)==2019 & month(time_index)==6 & day(time_index) <= 7 & day(time_index) >= 5)
g1 <- ggplot(dni_06_2019_1, aes(x=time_index, y=dni)) +
geom_line() +
th + labs(x='', y='DNI', title='DNI Time Series for June 1st-7th, 2019') +
scale_x_datetime(date_break="1 day", date_labels="%b %d")
g2 <- ggplot(dni_06_2019_2, aes(x=time_index, y=dni)) +
geom_line() +
th + labs(x='', y='DNI', title='DNI Time Series for June 3rd-7th, 2019') +
scale_x_datetime(date_break="1 day", date_labels="%b %d")
g3 <- ggplot(dni_06_2019_3, aes(x=time_index, y=dni)) +
geom_line() +
th + labs(x='Time', y='DNI', title='DNI Time Series for June 5th-7th, 2019') +
scale_x_datetime(date_break="1 day", date_labels="%b %d")
g <- arrangeGrob(g1, g2, g3)
ggsave('../plots/ts.png', g, bg='transparent')
n <- length(dni_06_2019_1$dni)
dft <- 2*fft(dni_06_2019_1$dni)
P_dni <- Mod(dft)^2/n
P_df_1 <- subset(data.frame(x=0:(n-1)/n, y=P_dni), x>0)
n <- length(dni_06_2019_2$dni)
dft <- 2*fft(dni_06_2019_2$dni)
P_dni <- Mod(dft)^2/n
P_df_2 <- subset(data.frame(x=0:(n-1)/n, y=P_dni), x>0)
n <- length(dni_06_2019_3$dni)
dft <- 2*fft(dni_06_2019_3$dni)
P_dni <- Mod(dft)^2/n
P_df_3 <- subset(data.frame(x=0:(n-1)/n, y=P_dni), x>0)
ix_1 <- which.max(P_df_1$y)
ix_2 <- which.max(P_df_2$y)
ix_3 <- which.max(P_df_3$y)
g1 <- ggplot(P_df_1, aes(x=x, y=y)) +
geom_point(shape=1, size=0.75) +
geom_point(data=slice(P_df_1, ix_1), aes(x=x, y=y), color='red', size=0.75) +
annotate('text', x=P_df_1$x[ix_1]+0.07, y=P_df_1$y[ix_1]-100000000, label=TeX(sprintf('$\\omega = %.4f$', P_df_1$x[ix_1])), size=3) +
geom_line(size=0.25) +
th + labs(x='', y='Periodogram', title='Scaled Periodogram for June 1st-7th, 2019')
g2 <- ggplot(P_df_2, aes(x=x, y=y)) +
geom_point(shape=1, size=0.75) +
geom_point(data=slice(P_df_2, ix_2), aes(x=x, y=y), color='red', size=0.75) +
annotate('text', x=P_df_2$x[ix_2]+0.07, y=P_df_2$y[ix_2]-100000000, label=TeX(sprintf('$\\omega = %.4f$', P_df_1$x[ix_2])), size=3) +
geom_line(size=0.25) +
th + labs(x='', y='Periodogram', title='Scaled Periodogram for June 3rd-7th, 2019')
g3 <- ggplot(P_df_3, aes(x=x, y=y)) +
geom_point(shape=1, size=0.75) +
geom_point(data=slice(P_df_3, ix_3), aes(x=x, y=y), color='red', size=0.75) +
annotate('text', x=P_df_3$x[ix_3]+0.07, y=P_df_3$y[ix_3]-100000000, label=TeX(sprintf('$\\omega = %.4f$', P_df_3$x[ix_3])), size=3) +
geom_line(size=0.25) +
th + labs(x='Frequency', y='Periodogram', title='Scaled Periodogram for June 5th-7th, 2019')
floor(1/P_df_1$x[which.max(P_df_1$y)])
floor(1/P_df_2$x[which.max(P_df_2$y)])
floor(1/P_df_3$x[which.max(P_df_3$y)])
g <- arrangeGrob(g1, g2, g3)
ggsave('../plots/pgrams.png', g, bg='transparent')
rm(list=ls())
library(tidyverse); library(gridExtra); library(gridExtra); library(ggfortify);
library(lubridate)
library(GGally); library(lemon); library(ggrepel)
library(scales);
library(latex2exp); library(scales)
library(qqplotr)
library(astsa); library(forecast)
library(reshape2)
library(magrittr)
library(grid)
library(lutz)
th <- theme_bw(base_size=10) +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=8), axis.title=element_text(size=9)) +
theme(strip.background=element_blank()) +
theme(strip.text=element_text(face="bold")) +
theme(plot.margin=margin(10,5,5,5)) +
theme(plot.title=element_text(size=10, face='bold', hjust=0.5)) +
theme(legend.title=element_text(size=7), legend.text=element_text(size=6), legend.margin=margin(0,0,0,0)) +
theme(axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm")),
axis.title.y = element_text(margin = unit(c(0, 3, 0, 0), "mm")))
##### Read in full SXF data set #####
sxf_full <- read_csv("../data/sxf_full.csv")
##### Extract datetime and DNI columns and save as .rdata #####
sxf_dni <- sxf_full %>%
filter(dni != 0, solar_zenith_angle <= 89.5) %>%
select(time_index, dni)
dni_06_2019_1 <- filter(sxf_dni, year(time_index)==2019 & month(time_index)==6 & day(time_index) <= 7)
dni_06_2019_2 <- filter(sxf_dni, year(time_index)==2019 & month(time_index)==6 & day(time_index) <= 7 & day(time_index) >= 3)
dni_06_2019_3<- filter(sxf_dni, year(time_index)==2019 & month(time_index)==6 & day(time_index) <= 7 & day(time_index) >= 5)
g1 <- ggplot(dni_06_2019_1, aes(x=time_index, y=dni)) +
geom_line() +
th + labs(x='', y='DNI', title='DNI Time Series for June 1st-7th, 2019') +
scale_x_datetime(date_break="1 day", date_labels="%b %d")
g2 <- ggplot(dni_06_2019_2, aes(x=time_index, y=dni)) +
geom_line() +
th + labs(x='', y='DNI', title='DNI Time Series for June 3rd-7th, 2019') +
scale_x_datetime(date_break="1 day", date_labels="%b %d")
g3 <- ggplot(dni_06_2019_3, aes(x=time_index, y=dni)) +
geom_line() +
th + labs(x='Time', y='DNI', title='DNI Time Series for June 5th-7th, 2019') +
scale_x_datetime(date_break="1 day", date_labels="%b %d")
g <- arrangeGrob(g1, g2, g3)
ggsave('../plots/ts.png', g, bg='transparent')
n <- length(dni_06_2019_1$dni)
dft <- 2*fft(dni_06_2019_1$dni)
P_dni <- Mod(dft)^2/n
P_df_1 <- subset(data.frame(x=0:(n-1)/n, y=P_dni), x>0)
n <- length(dni_06_2019_2$dni)
dft <- 2*fft(dni_06_2019_2$dni)
P_dni <- Mod(dft)^2/n
P_df_2 <- subset(data.frame(x=0:(n-1)/n, y=P_dni), x>0)
n <- length(dni_06_2019_3$dni)
dft <- 2*fft(dni_06_2019_3$dni)
P_dni <- Mod(dft)^2/n
P_df_3 <- subset(data.frame(x=0:(n-1)/n, y=P_dni), x>0)
ix_1 <- which.max(P_df_1$y)
ix_2 <- which.max(P_df_2$y)
ix_3 <- which.max(P_df_3$y)
g1 <- ggplot(P_df_1, aes(x=x, y=y)) +
geom_point(shape=1, size=0.75) +
geom_point(data=slice(P_df_1, ix_1), aes(x=x, y=y), color='red', size=0.75) +
annotate('text', x=P_df_1$x[ix_1]+0.07, y=P_df_1$y[ix_1]-10000000, label=TeX(sprintf('$\\omega = %.4f$', P_df_1$x[ix_1])), size=3) +
geom_line(size=0.25) +
th + labs(x='', y='Periodogram', title='Scaled Periodogram for June 1st-7th, 2019')
g2 <- ggplot(P_df_2, aes(x=x, y=y)) +
geom_point(shape=1, size=0.75) +
geom_point(data=slice(P_df_2, ix_2), aes(x=x, y=y), color='red', size=0.75) +
annotate('text', x=P_df_2$x[ix_2]+0.07, y=P_df_2$y[ix_2]-10000000, label=TeX(sprintf('$\\omega = %.4f$', P_df_1$x[ix_2])), size=3) +
geom_line(size=0.25) +
th + labs(x='', y='Periodogram', title='Scaled Periodogram for June 3rd-7th, 2019')
g3 <- ggplot(P_df_3, aes(x=x, y=y)) +
geom_point(shape=1, size=0.75) +
geom_point(data=slice(P_df_3, ix_3), aes(x=x, y=y), color='red', size=0.75) +
annotate('text', x=P_df_3$x[ix_3]+0.07, y=P_df_3$y[ix_3]-10000000, label=TeX(sprintf('$\\omega = %.4f$', P_df_3$x[ix_3])), size=3) +
geom_line(size=0.25) +
th + labs(x='Frequency', y='Periodogram', title='Scaled Periodogram for June 5th-7th, 2019')
floor(1/P_df_1$x[which.max(P_df_1$y)])
floor(1/P_df_2$x[which.max(P_df_2$y)])
floor(1/P_df_3$x[which.max(P_df_3$y)])
g <- arrangeGrob(g1, g2, g3)
ggsave('../plots/pgrams.png', g, bg='transparent')
rm(list=ls())
library(tidyverse); library(gridExtra); library(gridExtra); library(ggfortify);
library(lubridate)
library(GGally); library(lemon); library(ggrepel)
library(scales);
library(latex2exp); library(scales)
library(qqplotr)
library(astsa); library(forecast)
library(reshape2)
library(magrittr)
library(grid)
library(lutz)
th <- theme_bw(base_size=10) +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=8), axis.title=element_text(size=9)) +
theme(strip.background=element_blank()) +
theme(strip.text=element_text(face="bold")) +
theme(plot.margin=margin(10,5,5,5)) +
theme(plot.title=element_text(size=10, face='bold', hjust=0.5)) +
theme(legend.title=element_text(size=7), legend.text=element_text(size=6), legend.margin=margin(0,0,0,0)) +
theme(axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm")),
axis.title.y = element_text(margin = unit(c(0, 3, 0, 0), "mm")))
##### Read in full SXF data set #####
sxf_full <- read_csv("../data/sxf_full.csv")
##### Extract datetime and DNI columns and save as .rdata #####
sxf_dni <- sxf_full %>%
filter(dni != 0, solar_zenith_angle <= 89.5) %>%
select(time_index, dni)
dni_06_2019_1 <- filter(sxf_dni, year(time_index)==2019 & month(time_index)==6 & day(time_index) <= 7)
dni_06_2019_2 <- filter(sxf_dni, year(time_index)==2019 & month(time_index)==6 & day(time_index) <= 7 & day(time_index) >= 3)
dni_06_2019_3<- filter(sxf_dni, year(time_index)==2019 & month(time_index)==6 & day(time_index) <= 7 & day(time_index) >= 5)
g1 <- ggplot(dni_06_2019_1, aes(x=time_index, y=dni)) +
geom_line() +
th + labs(x='', y='DNI', title='DNI Time Series for June 1st-7th, 2019') +
scale_x_datetime(date_break="1 day", date_labels="%b %d")
g2 <- ggplot(dni_06_2019_2, aes(x=time_index, y=dni)) +
geom_line() +
th + labs(x='', y='DNI', title='DNI Time Series for June 3rd-7th, 2019') +
scale_x_datetime(date_break="1 day", date_labels="%b %d")
g3 <- ggplot(dni_06_2019_3, aes(x=time_index, y=dni)) +
geom_line() +
th + labs(x='Time', y='DNI', title='DNI Time Series for June 5th-7th, 2019') +
scale_x_datetime(date_break="1 day", date_labels="%b %d")
g <- arrangeGrob(g1, g2, g3)
ggsave('../plots/ts.png', g, bg='transparent')
n <- length(dni_06_2019_1$dni)
dft <- 2*fft(dni_06_2019_1$dni)
P_dni <- Mod(dft)^2/n
P_df_1 <- subset(data.frame(x=0:(n-1)/n, y=P_dni), x>0)
n <- length(dni_06_2019_2$dni)
dft <- 2*fft(dni_06_2019_2$dni)
P_dni <- Mod(dft)^2/n
P_df_2 <- subset(data.frame(x=0:(n-1)/n, y=P_dni), x>0)
n <- length(dni_06_2019_3$dni)
dft <- 2*fft(dni_06_2019_3$dni)
P_dni <- Mod(dft)^2/n
P_df_3 <- subset(data.frame(x=0:(n-1)/n, y=P_dni), x>0)
ix_1 <- which.max(P_df_1$y)
ix_2 <- which.max(P_df_2$y)
ix_3 <- which.max(P_df_3$y)
g1 <- ggplot(P_df_1, aes(x=x, y=y)) +
geom_point(shape=1, size=0.75) +
geom_point(data=slice(P_df_1, ix_1), aes(x=x, y=y), color='red', size=0.75) +
annotate('text', x=P_df_1$x[ix_1]+0.07, y=P_df_1$y[ix_1]-1000000, label=TeX(sprintf('$\\omega = %.4f$', P_df_1$x[ix_1])), size=3) +
geom_line(size=0.25) +
th + labs(x='', y='Periodogram', title='Scaled Periodogram for June 1st-7th, 2019')
g2 <- ggplot(P_df_2, aes(x=x, y=y)) +
geom_point(shape=1, size=0.75) +
geom_point(data=slice(P_df_2, ix_2), aes(x=x, y=y), color='red', size=0.75) +
annotate('text', x=P_df_2$x[ix_2]+0.07, y=P_df_2$y[ix_2]-1000000, label=TeX(sprintf('$\\omega = %.4f$', P_df_1$x[ix_2])), size=3) +
geom_line(size=0.25) +
th + labs(x='', y='Periodogram', title='Scaled Periodogram for June 3rd-7th, 2019')
g3 <- ggplot(P_df_3, aes(x=x, y=y)) +
geom_point(shape=1, size=0.75) +
geom_point(data=slice(P_df_3, ix_3), aes(x=x, y=y), color='red', size=0.75) +
annotate('text', x=P_df_3$x[ix_3]+0.07, y=P_df_3$y[ix_3]-1000000, label=TeX(sprintf('$\\omega = %.4f$', P_df_3$x[ix_3])), size=3) +
geom_line(size=0.25) +
th + labs(x='Frequency', y='Periodogram', title='Scaled Periodogram for June 5th-7th, 2019')
floor(1/P_df_1$x[which.max(P_df_1$y)])
floor(1/P_df_2$x[which.max(P_df_2$y)])
floor(1/P_df_3$x[which.max(P_df_3$y)])
g <- arrangeGrob(g1, g2, g3)
ggsave('../plots/pgrams.png', g, bg='transparent')
rm(list=ls())
library(tidyverse); library(gridExtra); library(gridExtra); library(ggfortify);
library(lubridate)
library(GGally); library(lemon); library(ggrepel)
library(scales);
library(latex2exp); library(scales)
library(qqplotr)
library(astsa); library(forecast)
library(reshape2)
library(magrittr)
library(grid)
library(lutz)
th <- theme_bw(base_size=10) +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=8), axis.title=element_text(size=9)) +
theme(strip.background=element_blank()) +
theme(strip.text=element_text(face="bold")) +
theme(plot.margin=margin(10,5,5,5)) +
theme(plot.title=element_text(size=10, face='bold', hjust=0.5)) +
theme(legend.title=element_text(size=7), legend.text=element_text(size=6), legend.margin=margin(0,0,0,0)) +
theme(axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm")),
axis.title.y = element_text(margin = unit(c(0, 3, 0, 0), "mm")))
##### Read in full SXF data set #####
sxf_full <- read_csv("../data/sxf_full.csv")
##### Extract datetime and DNI columns and save as .rdata #####
sxf_dni <- sxf_full %>%
filter(dni != 0, solar_zenith_angle <= 89.5) %>%
select(time_index, dni)
dni_06_2019_1 <- filter(sxf_dni, year(time_index)==2019 & month(time_index)==6 & day(time_index) <= 7)
dni_06_2019_2 <- filter(sxf_dni, year(time_index)==2019 & month(time_index)==6 & day(time_index) <= 7 & day(time_index) >= 3)
dni_06_2019_3<- filter(sxf_dni, year(time_index)==2019 & month(time_index)==6 & day(time_index) <= 7 & day(time_index) >= 5)
g1 <- ggplot(dni_06_2019_1, aes(x=time_index, y=dni)) +
geom_line() +
th + labs(x='', y='DNI', title='DNI Time Series for June 1st-7th, 2019') +
scale_x_datetime(date_break="1 day", date_labels="%b %d")
g2 <- ggplot(dni_06_2019_2, aes(x=time_index, y=dni)) +
geom_line() +
th + labs(x='', y='DNI', title='DNI Time Series for June 3rd-7th, 2019') +
scale_x_datetime(date_break="1 day", date_labels="%b %d")
g3 <- ggplot(dni_06_2019_3, aes(x=time_index, y=dni)) +
geom_line() +
th + labs(x='Time', y='DNI', title='DNI Time Series for June 5th-7th, 2019') +
scale_x_datetime(date_break="1 day", date_labels="%b %d")
g <- arrangeGrob(g1, g2, g3)
ggsave('../plots/ts.png', g, bg='transparent')
n <- length(dni_06_2019_1$dni)
dft <- 2*fft(dni_06_2019_1$dni)
P_dni <- Mod(dft)^2/n
P_df_1 <- subset(data.frame(x=0:(n-1)/n, y=P_dni), x>0)
n <- length(dni_06_2019_2$dni)
dft <- 2*fft(dni_06_2019_2$dni)
P_dni <- Mod(dft)^2/n
P_df_2 <- subset(data.frame(x=0:(n-1)/n, y=P_dni), x>0)
n <- length(dni_06_2019_3$dni)
dft <- 2*fft(dni_06_2019_3$dni)
P_dni <- Mod(dft)^2/n
P_df_3 <- subset(data.frame(x=0:(n-1)/n, y=P_dni), x>0)
ix_1 <- which.max(P_df_1$y)
ix_2 <- which.max(P_df_2$y)
ix_3 <- which.max(P_df_3$y)
g1 <- ggplot(P_df_1, aes(x=x, y=y)) +
geom_point(shape=1, size=0.75) +
geom_point(data=slice(P_df_1, ix_1), aes(x=x, y=y), color='red', size=0.75) +
annotate('text', x=P_df_1$x[ix_1]+0.07, y=P_df_1$y[ix_1]-300000, label=TeX(sprintf('$\\omega = %.4f$', P_df_1$x[ix_1])), size=3) +
geom_line(size=0.25) +
th + labs(x='', y='Periodogram', title='Scaled Periodogram for June 1st-7th, 2019')
g2 <- ggplot(P_df_2, aes(x=x, y=y)) +
geom_point(shape=1, size=0.75) +
geom_point(data=slice(P_df_2, ix_2), aes(x=x, y=y), color='red', size=0.75) +
annotate('text', x=P_df_2$x[ix_2]+0.07, y=P_df_2$y[ix_2]-300000, label=TeX(sprintf('$\\omega = %.4f$', P_df_1$x[ix_2])), size=3) +
geom_line(size=0.25) +
th + labs(x='', y='Periodogram', title='Scaled Periodogram for June 3rd-7th, 2019')
g3 <- ggplot(P_df_3, aes(x=x, y=y)) +
geom_point(shape=1, size=0.75) +
geom_point(data=slice(P_df_3, ix_3), aes(x=x, y=y), color='red', size=0.75) +
annotate('text', x=P_df_3$x[ix_3]+0.07, y=P_df_3$y[ix_3]-300000, label=TeX(sprintf('$\\omega = %.4f$', P_df_3$x[ix_3])), size=3) +
geom_line(size=0.25) +
th + labs(x='Frequency', y='Periodogram', title='Scaled Periodogram for June 5th-7th, 2019')
floor(1/P_df_1$x[which.max(P_df_1$y)])
floor(1/P_df_2$x[which.max(P_df_2$y)])
floor(1/P_df_3$x[which.max(P_df_3$y)])
g <- arrangeGrob(g1, g2, g3)
ggsave('../plots/pgrams.png', g, bg='transparent')
g1 <- ggplot(P_df_1, aes(x=x, y=y)) +
geom_point(shape=1, size=0.75) +
geom_point(data=slice(P_df_1, ix_1), aes(x=x, y=y), color='red', size=0.75) +
annotate('text', x=P_df_1$x[ix_1]+0.07, y=P_df_1$y[ix_1]-300000, label=TeX(sprintf('$\\omega = %.4f$', P_df_1$x[ix_1])), size=3) +
geom_line(size=0.25) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
th + labs(x='', y='Periodogram', title='Scaled Periodogram for June 1st-7th, 2019')
g1
rm(list=ls())
library(tidyverse); library(gridExtra); library(gridExtra); library(ggfortify);
library(lubridate)
library(GGally); library(lemon); library(ggrepel)
library(scales);
library(latex2exp); library(scales)
library(qqplotr)
library(astsa); library(forecast)
library(reshape2)
library(magrittr)
library(grid)
library(lutz)
th <- theme_bw(base_size=10) +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=8), axis.title=element_text(size=9)) +
theme(strip.background=element_blank()) +
theme(strip.text=element_text(face="bold")) +
theme(plot.margin=margin(10,5,5,5)) +
theme(plot.title=element_text(size=10, face='bold', hjust=0.5)) +
theme(legend.title=element_text(size=7), legend.text=element_text(size=6), legend.margin=margin(0,0,0,0)) +
theme(axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm")),
axis.title.y = element_text(margin = unit(c(0, 3, 0, 0), "mm")))
##### Read in full SXF data set #####
sxf_full <- read_csv("../data/sxf_full.csv")
##### Extract datetime and DNI columns and save as .rdata #####
sxf_dni <- sxf_full %>%
filter(dni != 0, solar_zenith_angle <= 89.5) %>%
select(time_index, dni)
dni_06_2019_1 <- filter(sxf_dni, year(time_index)==2019 & month(time_index)==6 & day(time_index) <= 7)
dni_06_2019_2 <- filter(sxf_dni, year(time_index)==2019 & month(time_index)==6 & day(time_index) <= 7 & day(time_index) >= 3)
dni_06_2019_3<- filter(sxf_dni, year(time_index)==2019 & month(time_index)==6 & day(time_index) <= 7 & day(time_index) >= 5)
g1 <- ggplot(dni_06_2019_1, aes(x=time_index, y=dni)) +
geom_line() +
th + labs(x='', y='DNI', title='DNI Time Series for June 1st-7th, 2019') +
scale_x_datetime(date_break="1 day", date_labels="%b %d")
g2 <- ggplot(dni_06_2019_2, aes(x=time_index, y=dni)) +
geom_line() +
th + labs(x='', y='DNI', title='DNI Time Series for June 3rd-7th, 2019') +
scale_x_datetime(date_break="1 day", date_labels="%b %d")
g3 <- ggplot(dni_06_2019_3, aes(x=time_index, y=dni)) +
geom_line() +
th + labs(x='Time', y='DNI', title='DNI Time Series for June 5th-7th, 2019') +
scale_x_datetime(date_break="1 day", date_labels="%b %d")
g <- arrangeGrob(g1, g2, g3)
ggsave('../plots/ts.png', g, bg='transparent')
n <- length(dni_06_2019_1$dni)
dft <- 2*fft(dni_06_2019_1$dni)
P_dni <- Mod(dft)^2/n
P_df_1 <- subset(data.frame(x=0:(n-1)/n, y=P_dni), x>0)
n <- length(dni_06_2019_2$dni)
dft <- 2*fft(dni_06_2019_2$dni)
P_dni <- Mod(dft)^2/n
P_df_2 <- subset(data.frame(x=0:(n-1)/n, y=P_dni), x>0)
n <- length(dni_06_2019_3$dni)
dft <- 2*fft(dni_06_2019_3$dni)
P_dni <- Mod(dft)^2/n
P_df_3 <- subset(data.frame(x=0:(n-1)/n, y=P_dni), x>0)
ix_1 <- which.max(P_df_1$y)
ix_2 <- which.max(P_df_2$y)
ix_3 <- which.max(P_df_3$y)
g1 <- ggplot(P_df_1, aes(x=x, y=y)) +
geom_point(shape=1, size=0.75) +
geom_point(data=slice(P_df_1, ix_1), aes(x=x, y=y), color='red', size=0.75) +
annotate('text', x=P_df_1$x[ix_1]+0.07, y=P_df_1$y[ix_1]-300000, label=TeX(sprintf('$\\omega = %.4f$', P_df_1$x[ix_1])), size=3) +
geom_line(size=0.25) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
th + labs(x='', y='Periodogram', title='Scaled Periodogram for June 1st-7th, 2019')
g2 <- ggplot(P_df_2, aes(x=x, y=y)) +
geom_point(shape=1, size=0.75) +
geom_point(data=slice(P_df_2, ix_2), aes(x=x, y=y), color='red', size=0.75) +
annotate('text', x=P_df_2$x[ix_2]+0.07, y=P_df_2$y[ix_2]-300000, label=TeX(sprintf('$\\omega = %.4f$', P_df_1$x[ix_2])), size=3) +
geom_line(size=0.25) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
th + labs(x='', y='Periodogram', title='Scaled Periodogram for June 3rd-7th, 2019')
g3 <- ggplot(P_df_3, aes(x=x, y=y)) +
geom_point(shape=1, size=0.75) +
geom_point(data=slice(P_df_3, ix_3), aes(x=x, y=y), color='red', size=0.75) +
annotate('text', x=P_df_3$x[ix_3]+0.07, y=P_df_3$y[ix_3]-300000, label=TeX(sprintf('$\\omega = %.4f$', P_df_3$x[ix_3])), size=3) +
geom_line(size=0.25) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
th + labs(x='Frequency', y='Periodogram', title='Scaled Periodogram for June 5th-7th, 2019')
floor(1/P_df_1$x[which.max(P_df_1$y)])
floor(1/P_df_2$x[which.max(P_df_2$y)])
floor(1/P_df_3$x[which.max(P_df_3$y)])
g <- arrangeGrob(g1, g2, g3)
ggsave('../plots/pgrams.png', g, bg='transparent')
acf(dni_06_2019_1$dni)
pacf(dni_06_2019_1$dni)
test <- diff(dni_06_2019_1$dni, 29)
?diff
test1 <- diff(dni_06_2019_1$dni, diff=29)
test1 <- diff(dni_06_2019_1$dni, lag=29)
